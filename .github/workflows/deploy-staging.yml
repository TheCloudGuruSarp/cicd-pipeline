name: Deploy to Staging

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy'
        required: true

jobs:
  deploy:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "4.5.4"
      
      - name: Set image tag
        run: |
          cd kubernetes/overlays/staging
          kustomize edit set image ${{ secrets.DOCKER_USERNAME }}/microservice-app=${{ secrets.DOCKER_USERNAME }}/microservice-app:${{ github.event.inputs.image_tag }}
      
      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      
      - name: Deploy to Kubernetes
        run: |
          kubectl config use-context staging-cluster
          kustomize build kubernetes/overlays/staging | kubectl apply -f -
          kubectl rollout status deployment/microservice-app -n microservices-staging --timeout=180s
      
      - name: Run integration tests
        run: |
          ./scripts/integration-test.sh staging
      
      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: Staging Deployment
          SLACK_MESSAGE: 'Deployed to STAGING environment: ${{ secrets.DOCKER_USERNAME }}/microservice-app:${{ github.event.inputs.image_tag }}'
          SLACK_FOOTER: 'GitHub Actions'